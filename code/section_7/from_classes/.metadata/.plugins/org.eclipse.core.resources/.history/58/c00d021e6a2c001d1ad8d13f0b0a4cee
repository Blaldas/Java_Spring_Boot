package com.blaldas.location.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.blaldas.location.entities.Location;
import com.blaldas.location.service.LocationService;
import com.blaldas.location.util.EmailUtil;

@Controller
public class LocationController {

	@Autowired
	LocationService service;
	@Autowired
	EmailUtil emailUtil;
	
	
	@RequestMapping("/showCreate")
	public String showCreate() {
		return "createLocation";
	}
	
	@RequestMapping("/saveLoc")
	public String saveLocation(@ModelAttribute("location")Location location, ModelMap modelmap) {
		Location locationSaved = service.saveLocation(location);
		String msg = "Location Saved with id:\t" + locationSaved.getId();
		modelmap.addAttribute("msg", msg);
		emailUtil.sendEmail("com.blaldas.location@gmail.com", "New Location Saved", "Location "+locationSaved.getName()+" Saved")
		return "createLocation";
	}
	
	@RequestMapping("/displayLocations")
	public String displayLocations(ModelMap modelmap) {
		List<Location> locationsList = service.getAllLocation();
		modelmap.addAttribute("locations", locationsList);
		
		return "displayLocations";
	}
	@RequestMapping("/deleteLocation")
	public String deleteLocation(@RequestParam("id") int id, ModelMap modelmap) {
		service.deleteLocation(service.getLocationById(id));
		List<Location> locationsList = service.getAllLocation();
		modelmap.addAttribute("locations", locationsList);
		return "displayLocations";
	}
	
	@RequestMapping("/showUpdate")
	public String showUpdatePage(@RequestParam("id") int id, ModelMap modelmap) {
		modelmap.addAttribute("location", service.getLocationById(id));
		return "updateLocation";
	}
	
	@RequestMapping("/updateLoc")
	public String updateLocation(@ModelAttribute("location")Location location, ModelMap modelMap) {
		service.updateLocation(location);
		
		List<Location> locationsList = service.getAllLocation();
		modelMap.addAttribute("locations", locationsList);
		return "displayLocations";
	}
	
	
}
